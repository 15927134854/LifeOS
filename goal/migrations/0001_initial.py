# Generated by Django 5.2 on 2025-05-06 13:07

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Action",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "update_time",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                ("description", models.TextField(verbose_name="行动描述")),
                ("plan_start_at", models.DateTimeField(verbose_name="计划开始时间")),
                ("plan_end_at", models.DateTimeField(verbose_name="计划结束时间")),
                ("pv", models.FloatField(verbose_name="目标行动价值量")),
                (
                    "actual_start_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="实际开始时间"
                    ),
                ),
                (
                    "actual_end_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="实际结束时间"
                    ),
                ),
                ("status", models.CharField(max_length=50, verbose_name="完成状态")),
                ("ac", models.FloatField(verbose_name="实际投入价值量")),
                ("ev", models.FloatField(verbose_name="挣得价值量")),
                (
                    "achievement_rate",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                        verbose_name="达成率",
                    ),
                ),
                (
                    "note",
                    models.TextField(blank=True, null=True, verbose_name="过程记录"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MetaAction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "update_time",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                ("name", models.CharField(max_length=255, verbose_name="行动名称")),
                (
                    "content",
                    models.TextField(
                        verbose_name="行动的具体内容描述，需要符合 SMART 原则"
                    ),
                ),
                (
                    "pv",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        verbose_name="行动工作价值量。生命有限，由时间来度量价值应该是个可行的方案，假设 80 年为标准寿命是满分价值",
                    ),
                ),
                (
                    "effectiveness",
                    models.BooleanField(default=True, verbose_name="有效性"),
                ),
                ("priority", models.BooleanField(default=True, verbose_name="优先级")),
                (
                    "recommendation",
                    models.BooleanField(default=True, verbose_name="推荐度"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ActionPlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "update_time",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                ("name", models.CharField(max_length=255, verbose_name="行动计划名称")),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="创建时间"
                    ),
                ),
                ("start_time", models.DateTimeField(verbose_name="开始时间")),
                ("end_time", models.DateTimeField(verbose_name="结束时间")),
                (
                    "note",
                    models.TextField(blank=True, null=True, verbose_name="过程记录"),
                ),
                (
                    "actions",
                    models.ManyToManyField(
                        blank=True, related_name="related_actions", to="goal.action"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="action",
            name="meta_action",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="actions",
                to="goal.metaaction",
                verbose_name="派生自的 MetaAction",
            ),
        ),
        migrations.CreateModel(
            name="MetaActionCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "update_time",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                ("name", models.CharField(max_length=255, verbose_name="行动分类名称")),
                (
                    "root",
                    models.BooleanField(
                        default=False, verbose_name="是否为 root 分类根"
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="children",
                        to="goal.metaactioncategory",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MetaActionCategoryMapping",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "update_time",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="goal.metaactioncategory",
                    ),
                ),
                (
                    "meta_action",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="goal.metaaction",
                    ),
                ),
            ],
            options={
                "unique_together": {("meta_action", "category")},
            },
        ),
        migrations.AddField(
            model_name="metaaction",
            name="categories",
            field=models.ManyToManyField(
                related_name="meta_actions",
                through="goal.MetaActionCategoryMapping",
                to="goal.metaactioncategory",
                verbose_name="Categorization 归属于... `MetaAction`-(cat)→`MetaActionCategory`实例归属于分类节点",
            ),
        ),
        migrations.CreateModel(
            name="MetaActionCausationValueGoal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "update_time",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "causation_pair",
                    models.JSONField(default=dict, verbose_name="因果关系对"),
                ),
                (
                    "weight",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                        verbose_name="因果强度权重",
                    ),
                ),
                (
                    "confidence",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                        verbose_name="因果关系置信度",
                    ),
                ),
                (
                    "meta_action",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="causation_relations",
                        to="goal.metaaction",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="metaaction",
            name="causations",
            field=models.ManyToManyField(
                related_name="meta_actions",
                to="goal.metaactioncausationvaluegoal",
                verbose_name="Causation 因果导致关系... `MetaAction`-(Causation)→`ValueGoal`",
            ),
        ),
        migrations.CreateModel(
            name="MetaActionInteractionMetaAction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "update_time",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "interaction_type",
                    models.CharField(
                        choices=[("synergy", "协同"), ("antagonism", "拮抗")],
                        max_length=50,
                    ),
                ),
                (
                    "from_meta_action",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="from_interactions",
                        to="goal.metaaction",
                    ),
                ),
                (
                    "to_meta_action",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="to_interactions",
                        to="goal.metaaction",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="metaaction",
            name="interactions",
            field=models.ManyToManyField(
                blank=True,
                related_name="interacted_with",
                through="goal.MetaActionInteractionMetaAction",
                to="goal.metaaction",
                verbose_name="行动间协同/拮抗效应关系 `MetaAction`←(Interaction)→`MetaAction`",
            ),
        ),
        migrations.CreateModel(
            name="ValueGoalCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "update_time",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=255, verbose_name="人生价值目标分类名称"
                    ),
                ),
                (
                    "root",
                    models.BooleanField(
                        default=False, verbose_name="是否为 root 分类根"
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="children",
                        to="goal.valuegoalcategory",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ValueGoal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "update_time",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="人生价值目标名称"),
                ),
                ("definition", models.TextField(verbose_name="人生价值目标的定义")),
                (
                    "characteristic",
                    models.JSONField(
                        default=list,
                        help_text="例如 ['批判性', '开放性']",
                        verbose_name="定义特征",
                    ),
                ),
                (
                    "categories",
                    models.ManyToManyField(
                        related_name="value_goals",
                        to="goal.valuegoalcategory",
                        verbose_name="归类到的价值目标分类",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ValueGoalWeight",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "update_time",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "weight",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                        verbose_name="权重",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="goal.valuegoalcategory",
                    ),
                ),
                (
                    "value_goal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="goal.valuegoal"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ValueSystemPriority",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "update_time",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="价值目标体系名称"),
                ),
                ("description", models.TextField(verbose_name="描述")),
                ("effective_at", models.DateTimeField(verbose_name="生效时间")),
                (
                    "status",
                    models.CharField(
                        choices=[("生效", "生效"), ("失效", "失效"), ("未知", "未知")],
                        default="未知",
                        max_length=10,
                        verbose_name="状态",
                    ),
                ),
                ("period", models.CharField(max_length=50, verbose_name="时间切面")),
                (
                    "decay_factors",
                    models.JSONField(default=list, verbose_name="衰减因子"),
                ),
                (
                    "category",
                    models.ForeignKey(
                        limit_choices_to={"root": True},
                        on_delete=django.db.models.deletion.CASCADE,
                        to="goal.valuegoalcategory",
                        verbose_name="对应分类方案",
                    ),
                ),
                (
                    "values",
                    models.ManyToManyField(
                        related_name="systems",
                        through="goal.ValueGoalWeight",
                        to="goal.valuegoal",
                        verbose_name="包含的价值目标",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="valuegoalweight",
            name="system",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="goal.valuesystempriority",
            ),
        ),
        migrations.CreateModel(
            name="Lifemeaning",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "update_time",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="记录时间"
                    ),
                ),
                (
                    "life_meaning",
                    models.FloatField(
                        blank=True, null=True, verbose_name="人生意义数值"
                    ),
                ),
                (
                    "action_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="goal.actionplan",
                        verbose_name="行动计划",
                    ),
                ),
                (
                    "value_system_priority",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="goal.valuesystempriority",
                        verbose_name="价值体系",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CumulativeLifemeaning",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "create_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "update_time",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="记录时间"
                    ),
                ),
                (
                    "cumulative_life_meaning",
                    models.FloatField(
                        blank=True, null=True, verbose_name="累计人生意义数值"
                    ),
                ),
                (
                    "action_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="goal.actionplan",
                        verbose_name="关联的行动计划",
                    ),
                ),
                (
                    "previous_lifemeanings",
                    models.ManyToManyField(
                        related_name="cumulative_records",
                        to="goal.lifemeaning",
                        verbose_name="之前的人生意义记录",
                    ),
                ),
                (
                    "value_system_priority",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="goal.valuesystempriority",
                        verbose_name="关联的价值目标体系",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="metaactioncausationvaluegoal",
            index=models.Index(
                fields=["meta_action"], name="goal_metaac_meta_ac_20ae9f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="metaactioninteractionmetaaction",
            index=models.Index(
                fields=["from_meta_action", "to_meta_action"],
                name="goal_metaac_from_me_22c425_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="metaactioninteractionmetaaction",
            unique_together={("from_meta_action", "to_meta_action")},
        ),
        migrations.AddIndex(
            model_name="valuegoalweight",
            index=models.Index(
                fields=["system", "category"], name="goal_valueg_system__9dd1c8_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="valuegoalweight",
            unique_together={("system", "value_goal", "category")},
        ),
        migrations.AddIndex(
            model_name="lifemeaning",
            index=models.Index(
                fields=["created_at"], name="goal_lifeme_created_a2aafc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="cumulativelifemeaning",
            index=models.Index(
                fields=["created_at"], name="goal_cumula_created_6fa1ff_idx"
            ),
        ),
    ]
